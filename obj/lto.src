	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_drawPlayer
_drawPlayer:
	ld	hl, -8
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 7), hl
	ld	a, (ix + 9)
	ld	(ix - 8), a
	ld	hl, (ix + 12)
	ld	(ix - 3), hl
	ld	a, (ix + 15)
	ld	(ix - 4), a
	ld	hl, -32
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	bc, (ix - 7)
	ld	a, (ix - 8)
	call	__ftol
	push	bc
	pop	hl
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	call	__ftol
	ld	(ix + 6), hl
	ld	(ix + 9), bc
	ld	hl, 8
	ld	(ix + 12), hl
	ld	(ix + 15), hl
	ld	sp, ix
	pop	ix
	jp	_gfx_FillRectangle
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_getPlayerTilePos
_getPlayerTilePos:
	call	__frameset0
	ld	iy, (ix + 6)
	ld	hl, -4194304
	ld	e, 65
	ld	bc, (ix + 9)
	ld	a, (ix + 12)
	call	__fdiv
	call	__ftol
	ld	(iy), bc
	ld	bc, (ix + 13)
	ld	a, (ix + 16)
	ld	hl, -7340032
	call	__fdiv
	call	__ftol
	ld	(iy + 3), bc
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_getPlayerCollisions
_getPlayerCollisions:
	ld	hl, -12
	call	__frameset
	lea	hl, ix + 12
	push	de
	push	de
	push	de
	push	de
	push	de
	push	de
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	bc, 16
	ldir
	pea	ix - 6
	call	_getPlayerTilePos
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	ld	bc, (ix - 3)
	ld	de, 1
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	(ix - 12), bc
	jp	m, BB2_3
	push	bc
	pop	hl
	dec	hl
	ld	de, (ix - 6)
	ld	bc, 72
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + 9)
	add	iy, bc
	ld	bc, 3
	ld	(ix - 9), de
	ex	de, hl
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	hl, (iy)
	ld	de, 9
	or	a, a
	sbc	hl, de
	jr	nz, BB2_4
	ld	a, 0
	jr	BB2_5
BB2_3:
	ld	de, (ix - 6)
	ld	iy, (ix + 9)
	jr	BB2_6
BB2_4:
	ld	a, 1
BB2_5:
	ld	iy, (ix + 6)
	ld	(iy + 1), a
	ld	iy, (ix + 9)
	ld	de, (ix - 9)
BB2_6:
	push	de
	pop	hl
	ld	bc, 1
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	ld	(ix - 9), de
	jp	m, BB2_11
	dec	de
	ld	bc, 72
	ld	hl, (ix - 12)
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	bc, 3
	ex	de, hl
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	de, 9
	or	a, a
	sbc	hl, de
	jr	nz, BB2_9
	ld	a, 0
	jr	BB2_10
BB2_9:
	ld	a, 1
BB2_10:
	ld	hl, (ix + 6)
	ld	(hl), a
	ld	iy, (ix + 9)
	ld	de, (ix - 9)
BB2_11:
	ld	bc, 72
	ld	hl, (ix - 12)
	call	__imulu
	push	hl
	pop	bc
	add	iy, bc
	ld	bc, 3
	ex	de, hl
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	de, 9
	or	a, a
	sbc	hl, de
	jr	nz, BB2_13
	ld	a, 0
	jr	BB2_14
BB2_13:
	ld	a, 1
BB2_14:
	ld	iy, (ix + 6)
	ld	(iy + 2), a
	ld	de, 24
	ld	hl, (ix - 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	bc, (ix - 12)
	jp	p, BB2_19
	ld	de, (ix - 9)
	inc	de
	push	bc
	pop	hl
	ld	bc, 72
	call	__imulu
	push	hl
	pop	bc
	ld	iy, (ix + 9)
	add	iy, bc
	ld	bc, 3
	ex	de, hl
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	de, 9
	or	a, a
	sbc	hl, de
	jr	nz, BB2_17
	ld	a, 0
	jr	BB2_18
BB2_17:
	ld	a, 1
BB2_18:
	ld	iy, (ix + 6)
	ld	(iy + 3), a
	ld	bc, (ix - 12)
BB2_19:
	ld	de, 18
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	ld	iy, (ix + 9)
	jp	p, BB2_24
	inc	bc
	push	bc
	pop	hl
	ld	bc, 72
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	bc, 3
	ld	hl, (ix - 9)
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	de, 9
	or	a, a
	sbc	hl, de
	jr	nz, BB2_22
	ld	a, 0
	jr	BB2_23
BB2_22:
	ld	a, 1
BB2_23:
	ld	iy, (ix + 6)
	ld	(iy + 4), a
BB2_24:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_any
_any:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	de, 0
	ld	bc, 1
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	lea	bc, iy
	jp	p, BB3_2
	push	de
	pop	bc
BB3_2:
	ld	iy, (ix + 6)
BB3_3:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	z, BB3_6
	lea	hl, iy
	add	hl, de
	inc	de
	bit	0, (hl)
	jr	z, BB3_3
	dec	de
	jr	BB3_7
BB3_6:
	push	bc
	pop	de
BB3_7:
	ex	de, hl
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB3_9
	ld	a, 0
	jr	BB3_10
BB3_9:
	ld	a, -1
BB3_10:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawTile
_drawTile:
	call	__frameset0
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB4_2
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 16
	push	hl
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB4_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_generateMap
_generateMap:
	ld	hl, -33
	call	__frameset
	ld	bc, (ix + 15)
	ld	de, -500
	ld	hl, 500
	push	bc
	pop	iy
	add	iy, de
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	bc
	pop	hl
	ld	bc, 500
	or	a, a
	sbc	hl, bc
	ex	de, hl
	call	pe, __setflag
	jp	m, BB5_2
	lea	hl, iy
BB5_2:
	ld	de, (ix + 6)
	ld	(ix - 3), de
	ld	de, 170
	add	hl, de
	ld	(ix - 12), hl
	ld	hl, (ix + 18)
	ld	bc, 6
	call	__imulu
	ld	(ix - 15), hl
	ld	de, -16
	ld	hl, (ix + 12)
	add	hl, de
	ld	(ix - 18), hl
	ld	de, 15
	ld	bc, 0
BB5_3:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	z, BB5_16
	ld	(ix - 21), bc
	push	bc
	pop	hl
	ld	c, 4
	call	__ishl
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	(ix - 24), bc
	ld	a, l
	call	__ltof
	ld	(ix - 27), bc
	ld	l, a
	ld	(ix - 30), hl
	ld	iy, 0
	ld	hl, (ix + 9)
	ld	(ix - 6), hl
BB5_5:
	lea	hl, iy
	ld	bc, 60
	or	a, a
	sbc	hl, bc
	jp	z, BB5_15
	ld	(ix - 9), iy
	call	_rand
	ld	(ix - 33), hl
	ld	hl, (ix - 30)
	push	hl
	ld	hl, (ix - 27)
	push	hl
	call	_log
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	call	__ftol
	push	bc
	pop	hl
	ld	bc, 170
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 12)
	add	hl, de
	ld	bc, (ix - 33)
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, -1
	jr	z, BB5_8
	ld	a, 0
BB5_8:
	ld	hl, (ix - 24)
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	ld	l, -1
	jr	z, BB5_10
	ld	l, 0
BB5_10:
	and	a, l
	bit	0, a
	ld	bc, 0
	ld	iy, (ix - 9)
	jr	nz, BB5_12
	ld	bc, 9
BB5_12:
	ex	de, hl
	ld	de, (ix - 15)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB5_14
	ld	bc, 0
BB5_14:
	lea	de, iy
	ld	iy, (ix - 3)
	add	iy, de
	ld	(iy), bc
	ld	iy, (ix - 9)
	ld	de, -16
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	de, 3
	add	iy, de
	ld	de, 15
	jp	BB5_5
BB5_15:
	ld	bc, (ix - 21)
	inc	bc
	ld	iy, (ix - 3)
	lea	iy, iy + 72
	ld	(ix - 3), iy
	jp	BB5_3
BB5_16:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawMap
_drawMap:
	ld	hl, -15
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 3), hl
	ld	bc, 0
BB6_1:
	push	bc
	pop	hl
	ld	de, 15
	or	a, a
	sbc	hl, de
	jr	z, BB6_6
	ld	(ix - 9), bc
	push	bc
	pop	hl
	ld	c, 4
	call	__ishl
	ld	(ix - 12), hl
	ld	hl, (ix - 3)
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
BB6_3:
	push	hl
	pop	de
	ld	bc, 320
	or	a, a
	sbc	hl, bc
	jr	z, BB6_5
	ld	hl, (ix - 6)
	ld	bc, (hl)
	push	bc
	ld	hl, (ix - 12)
	push	hl
	ld	(ix - 15), de
	push	de
	call	_drawTile
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 15)
	ld	de, 16
	add	hl, de
	ld	iy, (ix - 6)
	lea	iy, iy + 3
	ld	(ix - 6), iy
	jr	BB6_3
BB6_5:
	ld	bc, (ix - 9)
	inc	bc
	ld	iy, (ix - 3)
	lea	iy, iy + 72
	ld	(ix - 3), iy
	jr	BB6_1
BB6_6:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -1359
	call	__frameset
	ld	bc, -1323
	lea	iy, ix
	add	iy, bc
	ld	bc, -1329
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	lea	hl, iy + 21
	push	ix
	ld	bc, -1332
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, iy + 5
	push	ix
	ld	bc, -1351
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, iy
	ld	bc, -1326
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, 1
	push	hl
	push	hl
	call	_gfx_SetTextScale
	pop	hl
	pop	hl
	ld	hl, 3
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (-851900)
	ld	a, (-851897)
	push	hl
	call	_srand
	pop	hl
	push	hl
	ld	hl, 60
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 128
	push	hl
	ld	hl, 8
	push	hl
	ld	bc, -1332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_generateMap
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	bc, -1329
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 5), hl
	ld	(iy + 8), 65
	ld	bc, -1335
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ex	de, hl
	ld	a, 65
	dec	bc
	lea	hl, ix
	add	hl, bc
	ld	(hl), a
	ld	bc, -1339
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	ld	a, 67
	push	ix
	dec	bc
	add	ix, bc
	ld	(ix), a
	pop	ix
BB7_1:
	call	_kb_Scan
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jp	nz, BB7_21
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	bc, -1332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_drawMap
	pop	hl
	ld	de, -1348
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	ld	de, -1341
	lea	iy, ix
	add	iy, de
	ld	a, (iy)
	ld	hl, 5033165
	ld	e, 63
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1329
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	ld	(iy + 17), hl
	ld	(iy + 20), e
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	push	ix
	ld	de, -1339
	add	ix, de
	ld	bc, (ix)
	pop	ix
	push	ix
	dec	de
	add	ix, de
	ld	a, (ix)
	pop	ix
	push	ix
	ld	de, -1348
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1341
	add	ix, bc
	ld	(ix), e
	pop	ix
	ld	bc, (ix - 3)
	call	__fsub
	ld	(ix - 3), de
	push	ix
	ld	de, -1339
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	(iy + 9), bc
	push	ix
	ld	bc, -1340
	add	ix, bc
	ld	(ix), a
	pop	ix
	ld	(iy + 12), a
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	ld	de, (ix - 3)
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	bc, -1351
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	ld	bc, 16
	ldir
	ld	bc, -1332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -1326
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_getPlayerCollisions
	ld	hl, 24
	add	hl, sp
	ld	sp, hl
	ld	hl, 5
	push	hl
	ld	bc, -1326
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_any
	pop	hl
	pop	hl
	bit	0, a
	jp	z, BB7_6
	ld	bc, -1341
	lea	hl, ix
	add	hl, bc
	ld	l, (hl)
	push	hl
	ld	bc, -1348
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fabsf
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	(ix - 3), de
	ld	de, -1358
	lea	hl, ix
	add	hl, de
	ld	(hl), bc
	dec	de
	lea	iy, ix
	add	iy, de
	ld	(iy), a
	push	ix
	ld	de, -1348
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1341
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, (ix - 3)
	call	__fdiv
	ld	(ix - 3), de
	push	ix
	ld	de, -1354
	add	ix, de
	ld	(ix), bc
	pop	ix
	push	ix
	dec	de
	add	ix, de
	ld	(ix), a
	pop	ix
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1326
	add	ix, bc
	ld	de, (ix)
	pop	ix
	ld	bc, (ix - 3)
BB7_4:
	ld	hl, 5
	push	hl
	push	de
	call	_any
	pop	hl
	pop	hl
	bit	0, a
	jp	z, BB7_7
	ld	de, -1354
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	dec	de
	lea	iy, ix
	add	iy, de
	ld	a, (iy)
	push	ix
	ld	de, -1339
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1340
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, (ix - 3)
	call	__fadd
	ld	(ix - 3), de
	push	ix
	ld	de, -1329
	add	ix, de
	ld	iy, (ix)
	pop	ix
	push	ix
	ld	de, -1339
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	(iy + 9), bc
	push	ix
	ld	bc, -1340
	add	ix, bc
	ld	(ix), a
	pop	ix
	ld	(iy + 12), a
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	ld	de, (ix - 3)
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	bc, -1351
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	ld	bc, 16
	ldir
	ld	bc, -1332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -1326
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_getPlayerCollisions
	ld	hl, 24
	add	hl, sp
	ld	sp, hl
	ld	bc, -1326
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	jp	BB7_4
BB7_6:
	ld	bc, -1345
	lea	hl, ix
	add	hl, bc
	ld	d, (hl)
	jp	BB7_11
BB7_7:
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	3, a
	ld	a, 0
	ld	l, a
	ld	bc, -1329
	lea	iy, ix
	push	af
	add	iy, bc
	pop	af
	ld	iy, (iy)
	push	ix
	ld	bc, -1345
	push	af
	add	ix, bc
	pop	af
	ld	d, (ix)
	pop	ix
	jr	z, BB7_10
	ld	(ix - 3), de
	ld	de, -1358
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	push	ix
	dec	de
	add	ix, de
	ld	a, (ix)
	pop	ix
	call	__fneg
	push	ix
	ld	de, -1348
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1341
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, (ix - 3)
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	ld	bc, 0
	xor	a, a
	call	__fcmp
	ld	a, -1
	ld	l, a
	jr	nz, BB7_10
	ld	a, 0
	ld	l, a
BB7_10:
	xor	a, a
	ld	bc, 1
	call	__land
	push	hl
	pop	bc
	ld	a, e
	call	__ultof
	ld	hl, -629146
	ld	e, 64
	call	__fmul
	ld	(ix - 3), de
	push	ix
	ld	de, -1348
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	(iy + 17), bc
	push	ix
	ld	bc, -1341
	add	ix, bc
	ld	(ix), a
	pop	ix
	ld	(iy + 20), a
	ld	de, (ix - 3)
BB7_11:
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 4
	call	__sand
	ld	bc, 0
	ld	c, l
	ld	b, h
	xor	a, a
	call	__ultof
	ld	hl, 5872026
	push	hl
	pop	iy
	ld	e, 63
	call	__fmul
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1344
	add	ix, bc
	ld	hl, (ix)
	pop	ix
	ld	e, d
	ld	bc, (ix - 3)
	call	__fadd
	ld	(ix - 3), de
	push	ix
	ld	de, -1344
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	de, (ix - 3)
	ld	d, a
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 2
	call	__sand
	ld	bc, 0
	ld	c, l
	ld	b, h
	xor	a, a
	call	__ultof
	lea	hl, iy
	ld	e, -65
	call	__fmul
	ld	(ix - 3), bc
	ld	bc, -1344
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	ld	e, d
	ld	bc, (ix - 3)
	call	__fadd
	ld	hl, 5033165
	ld	e, 63
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1329
	add	ix, bc
	ld	iy, (ix)
	pop	ix
	ld	(iy + 13), hl
	ld	(iy + 16), e
	ld	bc, (ix - 3)
	ld	(ix - 3), de
	push	ix
	ld	de, -1335
	add	ix, de
	ld	bc, (ix)
	pop	ix
	push	ix
	dec	de
	add	ix, de
	ld	a, (ix)
	pop	ix
	push	ix
	ld	de, -1344
	add	ix, de
	ld	(ix), hl
	pop	ix
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1345
	add	ix, bc
	ld	(ix), e
	pop	ix
	ld	bc, (ix - 3)
	call	__fadd
	ld	(ix - 3), de
	push	ix
	ld	de, -1335
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	(iy + 5), bc
	push	ix
	ld	bc, -1336
	add	ix, bc
	ld	(ix), a
	pop	ix
	ld	(iy + 8), a
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	ld	de, (ix - 3)
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	bc, -1351
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	ld	bc, 16
	ldir
	ld	bc, -1332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -1326
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_getPlayerCollisions
	ld	hl, 24
	add	hl, sp
	ld	sp, hl
	ld	hl, 5
	push	hl
	ld	bc, -1326
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_any
	pop	hl
	pop	hl
	bit	0, a
	jp	z, BB7_16
	ld	bc, -1345
	lea	hl, ix
	add	hl, bc
	ld	l, (hl)
	push	hl
	inc	bc
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_fabsf
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	(ix - 3), bc
	ld	bc, -1344
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	dec	bc
	lea	iy, ix
	add	iy, bc
	ld	e, (iy)
	ld	bc, (ix - 3)
	call	__fdiv
	ld	(ix - 3), de
	push	ix
	ld	de, -1354
	add	ix, de
	ld	(ix), bc
	pop	ix
	push	ix
	dec	de
	add	ix, de
	ld	(ix), a
	pop	ix
	ld	de, (ix - 3)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1326
	add	ix, bc
	ld	de, (ix)
	pop	ix
	ld	bc, (ix - 3)
BB7_13:
	ld	hl, 5
	push	hl
	push	de
	call	_any
	pop	hl
	pop	hl
	bit	0, a
	jp	z, BB7_15
	ld	de, -1335
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	dec	de
	lea	iy, ix
	add	iy, de
	ld	a, (iy)
	push	ix
	ld	de, -1354
	add	ix, de
	ld	hl, (ix)
	pop	ix
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1355
	add	ix, bc
	ld	e, (ix)
	pop	ix
	ld	bc, (ix - 3)
	call	__fsub
	ld	(ix - 3), de
	push	ix
	ld	de, -1329
	add	ix, de
	ld	iy, (ix)
	pop	ix
	push	ix
	ld	de, -1335
	add	ix, de
	ld	(ix), bc
	pop	ix
	ld	(iy + 5), bc
	push	ix
	ld	bc, -1336
	add	ix, bc
	ld	(ix), a
	pop	ix
	ld	(iy + 8), a
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	ld	de, (ix - 3)
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	bc, -1351
	lea	iy, ix
	add	iy, bc
	ld	hl, (iy)
	ld	bc, 16
	ldir
	ld	bc, -1332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -1326
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_getPlayerCollisions
	ld	hl, 24
	add	hl, sp
	ld	sp, hl
	ld	bc, -1326
	lea	hl, ix
	add	hl, bc
	ld	de, (hl)
	jp	BB7_13
BB7_15:
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	3, a
	jr	nz, BB7_17
BB7_16:
	ld	de, -1329
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	de, -1344
	lea	iy, ix
	add	iy, de
	ld	bc, (iy)
	ld	(ix - 3), bc
	push	ix
	ld	bc, -1345
	add	ix, bc
	ld	e, (ix)
	pop	ix
	push	ix
	ld	bc, -1341
	add	ix, bc
	ld	d, (ix)
	pop	ix
	jr	BB7_18
BB7_17:
	ld	de, -1329
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	hl, -629146
	ld	(iy + 17), hl
	ld	(iy + 20), 64
	ld	de, -1354
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	push	ix
	dec	de
	add	ix, de
	ld	a, (ix)
	pop	ix
	ld	hl, -8388608
	ld	e, -64
	call	__fmul
	ld	e, a
	ld	(iy + 13), bc
	ld	(iy + 16), e
	ld	hl, -629146
	ld	(ix - 3), bc
	ld	bc, -1348
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	a, 64
	ld	d, a
BB7_18:
	ld	bc, (ix - 3)
	ld	hl, -720876
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	7, a
	jp	nz, BB7_20
	ld	(ix - 3), bc
	ld	bc, -1341
	lea	hl, ix
	add	hl, bc
	ld	(hl), d
	ld	bc, -1345
	lea	iy, ix
	add	iy, bc
	ld	(iy), e
	ld	bc, (ix - 3)
	push	ix
	ld	de, -1344
	add	ix, de
	ld	(ix), bc
	pop	ix
	push	ix
	ld	bc, -1340
	add	ix, bc
	ld	l, (ix)
	pop	ix
	push	hl
	inc	bc
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	ld	bc, -1336
	lea	hl, ix
	add	hl, bc
	ld	l, (hl)
	push	hl
	inc	bc
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_drawPlayer
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	de, -1335
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	dec	de
	lea	iy, ix
	add	iy, de
	ld	a, (iy)
	call	__ftol
	or	a, a
	sbc	hl, hl
	push	hl
	push	bc
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	call	_gfx_GetTextX
	ld	de, 8
	add	hl, de
	ld	de, 0
	push	de
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	de, -1339
	lea	hl, ix
	add	hl, de
	ld	bc, (hl)
	dec	de
	lea	iy, ix
	add	iy, de
	ld	a, (iy)
	call	__ftol
	or	a, a
	sbc	hl, hl
	push	hl
	push	bc
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	ld	hl, 50
	push	hl
	call	_delay
	pop	hl
	jp	BB7_1
BB7_20:
	push	hl
	ld	hl, 60
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 128
	push	hl
	ld	hl, 8
	push	hl
	ld	bc, -1332
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_generateMap
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	or	a, a
	sbc	hl, hl
	ld	bc, -1329
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy + 5), hl
	ld	(iy + 8), 65
	ld	(iy + 9), hl
	ld	(iy + 12), 67
	ld	(iy + 13), hl
	ld	(iy + 16), h
	ld	(iy + 17), hl
	ld	(iy + 20), h
	ld	bc, -1335
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	ld	a, 65
	push	ix
	dec	bc
	add	ix, bc
	ld	(ix), a
	pop	ix
	push	ix
	ld	bc, -1344
	add	ix, bc
	ld	(ix), hl
	pop	ix
	xor	a, a
	push	ix
	dec	bc
	add	ix, bc
	ld	(ix), a
	pop	ix
	push	ix
	ld	bc, -1339
	add	ix, bc
	ld	(ix), hl
	pop	ix
	ex	de, hl
	ld	l, 67
	push	ix
	dec	bc
	add	ix, bc
	ld	(ix), l
	pop	ix
	ld	bc, -1348
	lea	hl, ix
	add	hl, bc
	ld	(hl), de
	push	ix
	ld	bc, -1341
	add	ix, bc
	ld	(ix), a
	pop	ix
	jp	BB7_1
BB7_21:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	_fabsf
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_srand
	extern	_log
	extern	_gfx_SetTextFGColor
	extern	_gfx_Begin
	extern	_kb_Scan
	extern	__fadd
	extern	_rand
	extern	__sand
	extern	__ishl
	extern	__ftol
	extern	__ultof
	extern	__fmul
	extern	_gfx_SetDraw
	extern	_gfx_GetTextX
	extern	__setflag
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_PrintInt
	extern	_gfx_SwapDraw
	extern	__fneg
	extern	_gfx_FillRectangle
	extern	__fdiv
	extern	__imulu
	extern	_gfx_SetColor
	extern	__ltof
	extern	__land
	extern	_delay
	extern	_gfx_End
	extern	__fcmp
	extern	__frameset0
	extern	_gfx_SetTextXY
	extern	__fsub
	extern	_gfx_SetTextScale
