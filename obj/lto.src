	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_any
_any:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	de, 0
	ld	bc, 1
	lea	hl, iy
	or	a, a
	sbc	hl, bc
	call	pe, __setflag
	lea	bc, iy
	jp	p, BB0_2
	push	de
	pop	bc
BB0_2:
	ld	iy, (ix + 6)
BB0_3:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jr	z, BB0_6
	lea	hl, iy
	add	hl, de
	inc	de
	bit	0, (hl)
	jr	z, BB0_3
	dec	de
	jr	BB0_7
BB0_6:
	push	bc
	pop	de
BB0_7:
	ex	de, hl
	ld	de, (ix + 9)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB0_9
	ld	a, 0
	jr	BB0_10
BB0_9:
	ld	a, -1
BB0_10:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawPlayer
_drawPlayer:
	call	__frameset0
	ld	hl, -32
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	ld	hl, 4194304
	ld	e, -64
	call	__fadd
	call	__ftol
	push	bc
	pop	iy
	ld	bc, (ix + 10)
	ld	a, (ix + 13)
	call	__fadd
	call	__ftol
	ld	hl, 7
	push	hl
	push	hl
	push	bc
	push	iy
	call	_gfx_FillRectangle
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_playerTouchingColor
_playerTouchingColor:
	call	__frameset0
	ld	hl, 4194304
	ld	e, 64
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	call	__ftol
	push	bc
	pop	iy
	ld	bc, (ix + 10)
	ld	a, (ix + 13)
	call	__fadd
	call	__ftol
	inc	c
	push	bc
	push	iy
	call	_gfx_GetPixel
	pop	hl
	pop	hl
	ld	l, (ix + 24)
	cp	a, l
	jr	z, BB2_2
	ld	a, 0
	jr	BB2_3
BB2_2:
	ld	a, -1
BB2_3:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_playerMovement
_playerMovement:
	ld	hl, -18
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, 5033165
	lea	hl, iy + 12
	ld	bc, (iy + 12)
	push	hl
	pop	iy
	lea	hl, iy + 3
	ld	a, (hl)
	ex	de, hl
	ld	e, -65
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	iy, (ix + 6)
	ld	(iy + 12), hl
	ld	(iy + 15), e
	lea	bc, iy + 4
	ld	(ix - 6), bc
	ld	bc, (iy + 4)
	ld	(ix - 3), bc
	ld	iy, (ix - 6)
	lea	iy, iy + 3
	ld	bc, (ix - 3)
	ld	(ix - 9), iy
	ld	a, (iy)
	call	__fsub
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	lea	de, iy + 8
	ld	hl, (iy + 8)
	ld	(ix - 3), hl
	push	de
	pop	iy
	lea	hl, iy + 3
	ld	(ix - 6), hl
	ld	d, (hl)
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 4
	call	__sand
	ld	iy, 0
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	lea	bc, iy
	xor	a, a
	call	__ultof
	ld	hl, 5872026
	ld	e, 63
	call	__fmul
	ld	hl, (ix - 3)
	ld	e, d
	call	__fadd
	ld	(ix - 3), bc
	ld	d, a
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 2
	call	__sand
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	lea	bc, iy
	xor	a, a
	call	__ultof
	ld	hl, 5872026
	ld	e, -65
	call	__fmul
	ld	hl, (ix - 3)
	ld	e, d
	call	__fadd
	ld	hl, 5033165
	ld	e, 63
	call	__fmul
	ld	(ix - 3), bc
	ld	e, a
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), e
	ld	bc, (iy)
	lea	hl, iy + 3
	ld	(ix - 12), hl
	ld	a, (hl)
	ld	hl, (ix - 3)
	call	__fadd
	ld	(iy), bc
	ld	(iy + 3), a
	ld	hl, -21
	add	hl, sp
	ld	sp, hl
	ld	iy, 0
	add	iy, sp
	ld	bc, 16
	lea	de, iy
	ld	hl, (ix + 6)
	ldir
	ld	(iy + 18), 0
	call	_playerTouchingColor
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	bit	0, a
	jp	z, BB3_11
	ld	bc, 16
	or	a, a
	sbc	hl, hl
	ld	(ix - 3), hl
BB3_2:
	ld	hl, -21
	add	hl, sp
	ld	sp, hl
	ld	iy, 0
	add	iy, sp
	lea	de, iy
	ld	hl, (ix + 6)
	ldir
	ld	(iy + 18), 0
	call	_playerTouchingColor
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	bit	0, a
	jr	z, BB3_5
	ld	bc, (ix - 3)
	push	bc
	pop	hl
	ld	de, 50
	or	a, a
	sbc	hl, de
	jr	nc, BB3_5
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	de, (iy + 12)
	ld	(ix - 18), de
	ld	a, (iy + 15)
	ld	(ix - 15), a
	ld	l, a
	push	hl
	push	de
	ld	(ix - 3), bc
	call	_fabsf
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	hl, (ix - 18)
	ld	e, (ix - 15)
	call	__fdiv
	ld	(ix - 15), bc
	ld	e, a
	ld	iy, (ix + 6)
	ld	bc, (iy + 4)
	ld	hl, (ix - 9)
	ld	a, (hl)
	ld	hl, (ix - 15)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	hl, (ix - 3)
	inc	hl
	ld	(ix - 3), hl
	ld	bc, 16
	jp	BB3_2
BB3_5:
	or	a, a
	sbc	hl, hl
BB3_6:
	ld	(ix - 3), hl
	ld	hl, -21
	add	hl, sp
	ld	sp, hl
	ld	iy, 0
	add	iy, sp
	ld	bc, 16
	lea	de, iy
	ld	hl, (ix + 6)
	ldir
	ld	(iy + 18), 0
	call	_playerTouchingColor
	ld	hl, 21
	add	hl, sp
	ld	sp, hl
	bit	0, a
	jr	z, BB3_9
	ld	de, 20
	ld	hl, (ix - 3)
	or	a, a
	sbc	hl, de
	jr	nc, BB3_9
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	de, (iy + 8)
	ld	(ix - 15), de
	ld	a, (iy + 11)
	ld	(ix - 9), a
	ld	l, a
	push	hl
	push	de
	call	_fabsf
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	ld	hl, (ix - 15)
	ld	e, (ix - 9)
	call	__fdiv
	push	bc
	pop	iy
	ld	e, a
	ld	hl, (ix + 6)
	ld	bc, (hl)
	ld	hl, (ix - 12)
	ld	a, (hl)
	lea	hl, iy
	call	__fsub
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	hl, (ix - 3)
	inc	hl
	jp	BB3_6
BB3_9:
	or	a, a
	sbc	hl, hl
	ld	iy, (ix + 6)
	ld	(iy + 12), hl
	ld	(iy + 15), h
	ld	hl, -720866
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	3, a
	jr	z, BB3_11
	ld	hl, -629146
	ld	(iy + 12), hl
	ld	(iy + 15), 64
	ld	de, (iy + 8)
	ld	(ix - 9), de
	ld	hl, (ix - 6)
	ld	a, (hl)
	ld	(ix - 3), a
	ld	l, a
	push	hl
	push	de
	call	_fabsf
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	call	__fneg
	ld	hl, (ix - 9)
	ld	e, (ix - 3)
	call	__fdiv
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
BB3_11:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_resetPlayer
_resetPlayer:
	call	__frameset0
	ld	bc, (ix + 9)
	ld	de, -8388608
	push	bc
	pop	hl
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	push	de
	pop	hl
	ld	e, -64
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	hl, (ix + 12)
	push	hl
	pop	iy
	push	hl
	pop	bc
	add	iy, iy
	sbc	hl, hl
	ld	a, l
	call	__ltof
	or	a, a
	sbc	hl, hl
	inc	e
	call	__fadd
	ld	hl, -8388608
	ld	e, -65
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	or	a, a
	sbc	hl, hl
	ld	(iy + 12), hl
	ld	(iy + 15), d
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_debugPlayerPosition
_debugPlayerPosition:
	call	__frameset0
	or	a, a
	sbc	hl, hl
	push	hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _.str
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	bc, (ix + 6)
	ld	a, (ix + 9)
	call	__ftol
	or	a, a
	sbc	hl, hl
	push	hl
	push	bc
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	ld	hl, _.str.1
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	bc, (ix + 10)
	ld	a, (ix + 13)
	call	__ftol
	or	a, a
	sbc	hl, hl
	push	hl
	push	bc
	call	_gfx_PrintInt
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawTile
_drawTile:
	call	__frameset0
	ld	hl, (ix + 12)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB6_2
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 16
	push	hl
	push	hl
	ld	hl, (ix + 9)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_gfx_FillRectangle
	pop	hl
	pop	hl
	pop	hl
	pop	hl
BB6_2:
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_generateMap
_generateMap:
	ld	hl, -33
	call	__frameset
	ld	bc, (ix + 15)
	ld	de, -500
	ld	hl, 500
	push	bc
	pop	iy
	add	iy, de
	or	a, a
	sbc	hl, bc
	push	hl
	pop	de
	push	bc
	pop	hl
	ld	bc, 500
	or	a, a
	sbc	hl, bc
	ex	de, hl
	call	pe, __setflag
	jp	m, BB7_2
	lea	hl, iy
BB7_2:
	ld	de, (ix + 6)
	ld	(ix - 3), de
	ld	de, 170
	add	hl, de
	ld	(ix - 12), hl
	ld	hl, (ix + 18)
	ld	bc, 6
	call	__imulu
	ld	(ix - 15), hl
	ld	de, -16
	ld	hl, (ix + 12)
	add	hl, de
	ld	(ix - 18), hl
	ld	de, 15
	ld	bc, 0
BB7_3:
	push	bc
	pop	hl
	or	a, a
	sbc	hl, de
	jp	z, BB7_16
	ld	(ix - 21), bc
	push	bc
	pop	hl
	ld	c, 4
	call	__ishl
	push	hl
	pop	bc
	push	bc
	pop	iy
	add	iy, iy
	sbc	hl, hl
	ld	(ix - 24), bc
	ld	a, l
	call	__ltof
	ld	(ix - 27), bc
	ld	l, a
	ld	(ix - 30), hl
	ld	iy, 0
	ld	hl, (ix + 9)
	ld	(ix - 6), hl
BB7_5:
	lea	hl, iy
	ld	bc, 60
	or	a, a
	sbc	hl, bc
	jp	z, BB7_15
	ld	(ix - 9), iy
	call	_rand
	ld	(ix - 33), hl
	ld	hl, (ix - 30)
	push	hl
	ld	hl, (ix - 27)
	push	hl
	call	_log
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	call	__ftol
	push	bc
	pop	hl
	ld	bc, 170
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 12)
	add	hl, de
	ld	bc, (ix - 33)
	call	__imulu
	push	hl
	pop	de
	ld	hl, (ix - 6)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, -1
	jr	z, BB7_8
	ld	a, 0
BB7_8:
	ld	hl, (ix - 24)
	ld	bc, (ix - 18)
	or	a, a
	sbc	hl, bc
	ld	l, -1
	jr	z, BB7_10
	ld	l, 0
BB7_10:
	and	a, l
	bit	0, a
	ld	bc, 0
	ld	iy, (ix - 9)
	jr	nz, BB7_12
	ld	bc, 9
BB7_12:
	ex	de, hl
	ld	de, (ix - 15)
	or	a, a
	sbc	hl, de
	call	pe, __setflag
	jp	m, BB7_14
	ld	bc, 0
BB7_14:
	lea	de, iy
	ld	iy, (ix - 3)
	add	iy, de
	ld	(iy), bc
	ld	iy, (ix - 9)
	ld	de, -16
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	de, 3
	add	iy, de
	ld	de, 15
	jp	BB7_5
BB7_15:
	ld	bc, (ix - 21)
	inc	bc
	ld	iy, (ix - 3)
	lea	iy, iy + 72
	ld	(ix - 3), iy
	jp	BB7_3
BB7_16:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_drawMap
_drawMap:
	ld	hl, -15
	call	__frameset
	ld	hl, (ix + 6)
	ld	(ix - 3), hl
	ld	bc, 0
BB8_1:
	push	bc
	pop	hl
	ld	de, 18
	or	a, a
	sbc	hl, de
	jr	z, BB8_6
	ld	(ix - 9), bc
	push	bc
	pop	hl
	ld	c, 4
	call	__ishl
	ld	(ix - 12), hl
	ld	hl, (ix - 3)
	ld	(ix - 6), hl
	or	a, a
	sbc	hl, hl
BB8_3:
	push	hl
	pop	de
	ld	bc, 384
	or	a, a
	sbc	hl, bc
	jr	z, BB8_5
	ld	hl, (ix - 6)
	ld	bc, (hl)
	push	bc
	ld	hl, (ix - 12)
	push	hl
	ld	(ix - 15), de
	push	de
	call	_drawTile
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 15)
	ld	de, 16
	add	hl, de
	ld	iy, (ix - 6)
	lea	iy, iy + 3
	ld	(ix - 6), iy
	jr	BB8_3
BB8_5:
	ld	bc, (ix - 9)
	inc	bc
	ld	iy, (ix - 3)
	lea	iy, iy + 72
	ld	(ix - 3), iy
	jr	BB8_1
BB8_6:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -1330
	call	__frameset
	ld	bc, -1318
	lea	iy, ix
	add	iy, bc
	ld	bc, -1324
	lea	hl, ix
	add	hl, bc
	ld	(hl), iy
	lea	hl, iy + 16
	push	ix
	ld	bc, -1321
	add	ix, bc
	ld	(ix), hl
	pop	ix
	lea	hl, iy
	ld	bc, -1327
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
	call	_gfx_Begin
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	hl, 3
	push	hl
	call	_gfx_SetTextFGColor
	pop	hl
	ld	hl, (-851900)
	ld	a, (-851897)
	push	hl
	call	_srand
	pop	hl
	ld	hl, 60
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 128
	push	hl
	ld	hl, 8
	push	hl
	ld	bc, -1321
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_generateMap
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1324
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	hl, -8388608
	ld	(iy), hl
	ld	(iy + 3), 64
	ld	hl, -1179648
	ld	(iy + 4), hl
	ld	(iy + 7), 66
	or	a, a
	sbc	hl, hl
	ld	(iy + 12), hl
	ld	(iy + 15), h
BB9_1:
	ld	bc, -1330
	lea	iy, ix
	add	iy, bc
	ld	(iy), hl
BB9_2:
	call	_kb_Scan
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	6, a
	jp	nz, BB9_9
	scf
	sbc	hl, hl
	push	hl
	call	_gfx_FillScreen
	pop	hl
	ld	bc, -1321
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_drawMap
	pop	hl
	ld	bc, -1327
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_playerMovement
	pop	hl
	ld	hl, -720876
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	a, l
	bit	7, a
	jr	nz, BB9_5
	ld	de, -1324
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	bc, (iy + 4)
	ld	hl, 7340032
	ld	e, 67
	ld	a, (iy + 7)
	call	__fcmp
	jp	p, BB9_6
BB9_5:
	ld	hl, 60
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 128
	push	hl
	ld	hl, 8
	push	hl
	ld	bc, -1321
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_generateMap
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	bc, -1324
	lea	hl, ix
	add	hl, bc
	ld	iy, (hl)
	ld	hl, -8388608
	ld	(iy), hl
	ld	(iy + 3), 64
	ld	hl, -1179648
	ld	(iy + 4), hl
	ld	(iy + 7), 66
	or	a, a
	sbc	hl, hl
	ld	(iy + 12), hl
	ld	(iy + 15), h
	jp	BB9_2
BB9_6:
	ld	de, -1324
	lea	hl, ix
	add	hl, de
	ld	iy, (hl)
	ld	bc, (iy)
	ld	hl, -6291456
	ld	e, 67
	ld	a, (iy + 3)
	call	__fcmp
	jp	m, BB9_8
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	bc, -1327
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 16
	ldir
	call	_drawPlayer
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	push	hl
	ex	de, hl
	ld	hl, 0
	add	hl, sp
	ex	de, hl
	ld	bc, -1327
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	ld	bc, 16
	ldir
	call	_debugPlayerPosition
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 8
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	call	_gfx_SetTextXY
	pop	hl
	pop	hl
	ld	hl, _.str.2
	push	hl
	call	_gfx_PrintString
	pop	hl
	ld	hl, 1
	push	hl
	ld	bc, -1330
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_gfx_PrintInt
	pop	hl
	pop	hl
	call	_gfx_SwapDraw
	ld	hl, 50
	push	hl
	call	_delay
	pop	hl
	jp	BB9_2
BB9_8:
	ld	hl, 60
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 128
	push	hl
	ld	hl, 8
	push	hl
	ld	bc, -1321
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	push	hl
	call	_generateMap
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, -8388608
	ld	bc, -1324
	lea	iy, ix
	add	iy, bc
	ld	iy, (iy)
	ld	(iy), hl
	ld	(iy + 3), 64
	ld	hl, -1179648
	ld	(iy + 4), hl
	ld	(iy + 7), 66
	or	a, a
	sbc	hl, hl
	ld	(iy + 12), hl
	ld	(iy + 15), h
	ld	bc, -1330
	lea	hl, ix
	add	hl, bc
	ld	hl, (hl)
	inc	hl
	jp	BB9_1
BB9_9:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	_.str
_.str:
	db	"Player Pos: ", 0

	section	.rodata,"a",@progbits
	private	_.str.1
_.str.1:
	db	", ", 0

	section	.rodata,"a",@progbits
	private	_.str.2
_.str.2:
	db	"Levels Completed: ", 0

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 5f8512f22751066573aa48ac848a6d2195838ac3)"
	extern	_fabsf
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_srand
	extern	_log
	extern	_gfx_SetTextFGColor
	extern	_gfx_GetPixel
	extern	_gfx_Begin
	extern	__fadd
	extern	_kb_Scan
	extern	_rand
	extern	__sand
	extern	_gfx_PrintString
	extern	__ultof
	extern	__ishl
	extern	__fmul
	extern	__ftol
	extern	_gfx_PrintInt
	extern	_gfx_SetDraw
	extern	_gfx_SwapDraw
	extern	__setflag
	extern	_gfx_FillScreen
	extern	__Unwind_SjLj_Unregister
	extern	__fneg
	extern	_gfx_FillRectangle
	extern	__fdiv
	extern	_gfx_SetColor
	extern	__imulu
	extern	__ltof
	extern	_delay
	extern	_gfx_End
	extern	__fcmp
	extern	__frameset0
	extern	_gfx_SetTextXY
	extern	__fsub
